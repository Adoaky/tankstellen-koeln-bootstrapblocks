@import "../assets/gutenberg/gutenberg";

[data-type="bootstrap-blocks/row"] {
	// Horizontal alignment
	&[data-alignment="center"] .wp-block-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		justify-content: center;
	}
	&[data-alignment="right"] .wp-block-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		justify-content: flex-end;
	}

	// Vertical alignment
	&[data-vertical-alignment="center"] .wp-block-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		align-items: center;
	}
	&[data-vertical-alignment="bottom"] .wp-block-bootstrap-blocks-row > .editor-inner-blocks > .editor-block-list__layout {
		align-items: flex-end;
	}
}

.wp-block-bootstrap-blocks-row {
	@include break-small() {
		> .editor-inner-blocks > .editor-block-list__layout {
			display: flex;
			flex-wrap: wrap;

			> [data-type="bootstrap-blocks/column"] {
				margin-left: 0;
				margin-right: 0;

				// Grid implementation
				$grid-columns: 12;

				@for $i from 1 through $grid-columns {
					&[data-size-xl="#{$i}"] {
						width: percentage(($i / $grid-columns));
					}
					&[data-size-xl="0"] {
						@for $i from 1 through $grid-columns {
							&[data-size-lg="#{$i}"] {
								width: percentage(($i / $grid-columns));
							}
						}
						&[data-size-lg="0"] {
							@for $i from 1 through $grid-columns {
								&[data-size-md="#{$i}"] {
									width: percentage(($i / $grid-columns));
								}
							}
							&[data-size-md="0"] {
								@for $i from 1 through $grid-columns {
									&[data-size-sm="#{$i}"] {
										width: percentage(($i / $grid-columns));
									}
								}
								&[data-size-sm="0"] {
									@for $i from 1 through $grid-columns {
										&[data-size-xs="#{$i}"] {
											width: percentage(($i / $grid-columns));
										}
										&[data-size-xs="0"] {
											flex-grow: 1;
										}
									}
								}
							}
						}
					}
				}

				// Prevent long unbroken words from overflowing.
				word-break: break-word; // For back-compat.
				overflow-wrap: break-word; // New standard.
			}

			// Set block list appender width to use full width of container to wrap to new line
			> .block-list-appender {
				width: 100%;
			}
		}
	}
}
